{"version":3,"sources":["Item.js","App.js","reportWebVitals.js","index.js"],"names":["Item","id","year","title","summary","poster","date_uploaded","genres","useState","timerDays","setTimerDays","timerHours","setTimerHours","timerMinutes","setTimerMinutes","timerSeconds","setTimerSeconds","interval","useRef","useEffect","CountdownDate","Date","getTime","setInterval","distance","days","Math","floor","hours","minutes","seconds","clearInterval","current","starttimer","className","src","alt","slice","map","genre","index","App","state","isLoading","items","getItems","a","axios","get","movies","data","setState","console","log","this","class","item","medium_cover_image","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4RAoEeA,MA9Df,YAAyE,EAA1DC,GAA2D,IAAvDC,EAAsD,EAAtDA,KAAMC,EAAgD,EAAhDA,MAAOC,EAAyC,EAAzCA,QAASC,EAAgC,EAAhCA,OAAQC,EAAwB,EAAxBA,cAAeC,EAAS,EAATA,OAE5D,EAAkCC,mBAAS,MAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,mBAAS,MAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAwCJ,mBAAS,MAAjD,mBAAOK,EAAP,KAAqBC,EAArB,KACA,EAAwCN,mBAAS,MAAjD,mBAAOO,EAAP,KAAqBC,EAArB,KAEIC,EAAWC,mBA+Bf,OANAC,qBAAU,WAER,OA1BiB,WACf,IAAMC,EAAgB,IAAIC,KAAKf,GAAegB,UAE9CL,EAAWM,aAAY,WACnB,IACMC,GADM,IAAIH,MAAOC,UACAF,EAEjBK,EAAOC,KAAKC,MAAMH,EAAQ,OAC1BI,EAAQF,KAAKC,MAAOH,EAAQ,MAAR,MACpBK,EAAUH,KAAKC,MAAOH,EAAQ,KAAT,KACrBM,EAAUJ,KAAKC,MAAOH,EAAQ,IAAkB,KAEnDA,EAAW,EACZO,cAAcd,EAASe,UAEvBtB,EAAae,GACbb,EAAcgB,GACdd,EAAgBe,GAChBb,EAAgBc,MAGnB,KAILG,GACO,WACLF,cAAcd,EAASe,aAIvB,sBAAKE,UAAU,QAAf,UACA,qBAAKC,IAAK9B,EAAQ+B,IAAKjC,EAAOA,MAAOA,IACrC,sBAAK+B,UAAU,cAAf,UACI,oBAAIA,UAAU,eAAd,SAA8B/B,IAC9B,oBAAI+B,UAAU,cAAd,SAA6BhC,IAC7B,oBAAGgC,UAAU,iBAAb,cAAgC9B,EAAQiC,MAAM,EAAE,KAAhD,UACA,oBAAIH,UAAU,gBAAd,SAA+B3B,EAAO+B,KAAI,SAACC,EAAOC,GAAR,OACtC,oBAAgBN,UAAU,gBAA1B,SAA2CK,GAAlCC,QACb,8BAAI/B,EAAJ,IAAgBE,EAAhB,IAA6BE,EAA7B,IAA4CE,YCJzC0B,E,4MA3CXC,MAAQ,CACJC,WAAW,EACXC,MAAO,I,EAGXC,S,sBAAW,8BAAAC,EAAA,sEAECC,IAAMC,IAAI,0CAFX,gBACcC,EADd,EACAC,KAAOA,KAAOD,OAErB,EAAKE,SAAS,CAACP,MAAMK,EAAQN,WAAU,IACvCS,QAAQC,IAAIJ,GAJL,2C,uDAOX,WACIK,KAAKT,a,oBAET,WACA,MAA2BS,KAAKZ,MAAzBC,EAAP,EAAOA,UAAWC,EAAlB,EAAkBA,MAClB,OAAO,yBAASW,MAAM,YAAf,SAECZ,EAEQ,qBAAKY,MAAM,SAAX,SACI,sBAAMA,MAAM,eAAZ,uCAGJ,qBAAKrB,UAAU,SAAf,SACCU,EAAMN,KAAI,SAAAkB,GAAI,OACd,cAAC,EAAD,CACGvD,GAAIuD,EAAKvD,GACTC,KAAMsD,EAAKtD,KACXC,MAAOqD,EAAKrD,MACZC,QAASoD,EAAKpD,QACdC,OAAQmD,EAAKC,mBACbnD,cAAekD,EAAKlD,cACpBC,OAAQiD,EAAKjD,oB,GAnCnBmD,IAAMC,WCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2fbde13d.chunk.js","sourcesContent":["\r\nimport React, {useEffect, useRef, useState} from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport './App.css';\r\n\r\n\r\nfunction Item({id, year, title, summary, poster, date_uploaded, genres}) {\r\n    \r\n    const [timerDays, setTimerDays] = useState('00');\r\n    const [timerHours, setTimerHours] = useState('00');\r\n    const [timerMinutes, setTimerMinutes] = useState('00');\r\n    const [timerSeconds, setTimerSeconds] = useState('00');\r\n    \r\n    let interval = useRef()\r\n    const starttimer = () => {\r\n        const CountdownDate = new Date(date_uploaded).getTime();\r\n  \r\n        interval = setInterval(() =>{\r\n            const now = new Date().getTime()\r\n            const distance = now - CountdownDate \r\n  \r\n            const days = Math.floor(distance / (1000 * 60 * 60 * 24))\r\n            const hours = Math.floor((distance % (1000 * 60 * 60 * 24) / (1000 * 60 * 60)))\r\n            const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000* 60))\r\n            const seconds = Math.floor((distance % (1000 * 60)) / 1000)\r\n  \r\n            if(distance < 0) {\r\n              clearInterval(interval.current);\r\n            } else {\r\n              setTimerDays(days)\r\n              setTimerHours(hours)\r\n              setTimerMinutes(minutes)\r\n              setTimerSeconds(seconds)\r\n            }\r\n  \r\n        }, 1000)\r\n    };\r\n  \r\n    useEffect(() => {\r\n      starttimer();\r\n      return () => {\r\n        clearInterval(interval.current)\r\n      }\r\n    }, ); \r\n    return (\r\n        <div className=\"movie\">\r\n        <img src={poster} alt={title} title={title}/>\r\n        <div className=\"movie__data\">\r\n            <h3 className=\"movie__title\">{title}</h3>\r\n            <h5 className=\"movie__year\">{year}</h5>\r\n            <p className=\"movie__summary\">\"{summary.slice(0,140)}...\"</p>\r\n            <ul className=\"movie__genres\">{genres.map((genre, index) => (\r\n                <li key={index} className=\"genres__genre\">{genre}</li>))}</ul>\r\n            <p>{timerDays}:{timerHours}:{timerMinutes}:{timerSeconds}</p>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nItem.propTypes = {\r\n  id : propTypes.number.isRequired,\r\n  year : propTypes.number.isRequired,\r\n  title : propTypes.string.isRequired,\r\n  summary : propTypes.string.isRequired,\r\n  poster : propTypes.string.isRequired,\r\n  genres : propTypes.arrayOf(propTypes.string).isRequired\r\n\r\n}\r\nexport default Item","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Item from \"./Item\";\r\nimport \"./App.css\";\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        isLoading: true,\r\n        items: []\r\n        \r\n    };\r\n    getItems = async () => {\r\n        const {data: {data: {movies}}} \r\n        = await axios.get(\"https://yts.mx/api/v2/list_movies.json\")\r\n        this.setState({items:movies, isLoading:false})\r\n        console.log(movies)\r\n        \r\n    }\r\n    componentDidMount() {\r\n        this.getItems()\r\n    }\r\n    render() {\r\n    const {isLoading, items} = this.state\r\n    return <section class=\"container\">\r\n        {\r\n            isLoading\r\n                ? (\r\n                    <div class=\"loader\">\r\n                        <span class=\"loader__text\">\"로딩중...\"</span>\r\n                    </div>\r\n                )\r\n                : ( <div className=\"movies\">\r\n                    {items.map(item => (\r\n                     <Item\r\n                        id={item.id}\r\n                        year={item.year}\r\n                        title={item.title}\r\n                        summary={item.summary}\r\n                        poster={item.medium_cover_image}\r\n                        date_uploaded={item.date_uploaded}\r\n                        genres={item.genres}\r\n                        />\r\n                ))}\r\n                </div>\r\n                    )\r\n        }</section>\r\n}\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nvar element = React.createElement('h1', {className: 'greeting'}, 'Hello, world!')\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}